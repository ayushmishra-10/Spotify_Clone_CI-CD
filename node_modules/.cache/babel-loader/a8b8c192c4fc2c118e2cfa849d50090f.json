{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\n\nvar useUnmountPromise = function () {\n  var refUnmounted = useRef(false);\n  useEffectOnce(function () {\n    return function () {\n      refUnmounted.current = true;\n    };\n  });\n  var wrapper = useMemo(function () {\n    var race = function (promise, onError) {\n      var newPromise = new Promise(function (resolve, reject) {\n        promise.then(function (result) {\n          if (!refUnmounted.current) resolve(result);\n        }, function (error) {\n          if (!refUnmounted.current) reject(error);else if (onError) onError(error);else console.error('useUnmountPromise', error);\n        });\n      });\n      return newPromise;\n    };\n\n    return race;\n  }, []);\n  return wrapper;\n};\n\nexport default useUnmountPromise;","map":{"version":3,"sources":["C:/Users/ayush mishra/Desktop/Spotify_Clone_CI-CD/node_modules/react-use/esm/useUnmountPromise.js"],"names":["useMemo","useRef","useEffectOnce","useUnmountPromise","refUnmounted","current","wrapper","race","promise","onError","newPromise","Promise","resolve","reject","then","result","error","console"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,IAAIC,iBAAiB,GAAG,YAAY;AAChC,MAAIC,YAAY,GAAGH,MAAM,CAAC,KAAD,CAAzB;AACAC,EAAAA,aAAa,CAAC,YAAY;AAAE,WAAO,YAAY;AAC3CE,MAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;AACH,KAF2B;AAExB,GAFS,CAAb;AAGA,MAAIC,OAAO,GAAGN,OAAO,CAAC,YAAY;AAC9B,QAAIO,IAAI,GAAG,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACnC,UAAIC,UAAU,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACpDL,QAAAA,OAAO,CAACM,IAAR,CAAa,UAAUC,MAAV,EAAkB;AAC3B,cAAI,CAACX,YAAY,CAACC,OAAlB,EACIO,OAAO,CAACG,MAAD,CAAP;AACP,SAHD,EAGG,UAAUC,KAAV,EAAiB;AAChB,cAAI,CAACZ,YAAY,CAACC,OAAlB,EACIQ,MAAM,CAACG,KAAD,CAAN,CADJ,KAEK,IAAIP,OAAJ,EACDA,OAAO,CAACO,KAAD,CAAP,CADC,KAGDC,OAAO,CAACD,KAAR,CAAc,mBAAd,EAAmCA,KAAnC;AACP,SAVD;AAWH,OAZgB,CAAjB;AAaA,aAAON,UAAP;AACH,KAfD;;AAgBA,WAAOH,IAAP;AACH,GAlBoB,EAkBlB,EAlBkB,CAArB;AAmBA,SAAOD,OAAP;AACH,CAzBD;;AA0BA,eAAeH,iBAAf","sourcesContent":["import { useMemo, useRef } from 'react';\r\nimport useEffectOnce from './useEffectOnce';\r\nvar useUnmountPromise = function () {\r\n    var refUnmounted = useRef(false);\r\n    useEffectOnce(function () { return function () {\r\n        refUnmounted.current = true;\r\n    }; });\r\n    var wrapper = useMemo(function () {\r\n        var race = function (promise, onError) {\r\n            var newPromise = new Promise(function (resolve, reject) {\r\n                promise.then(function (result) {\r\n                    if (!refUnmounted.current)\r\n                        resolve(result);\r\n                }, function (error) {\r\n                    if (!refUnmounted.current)\r\n                        reject(error);\r\n                    else if (onError)\r\n                        onError(error);\r\n                    else\r\n                        console.error('useUnmountPromise', error);\r\n                });\r\n            });\r\n            return newPromise;\r\n        };\r\n        return race;\r\n    }, []);\r\n    return wrapper;\r\n};\r\nexport default useUnmountPromise;\r\n"]},"metadata":{},"sourceType":"module"}