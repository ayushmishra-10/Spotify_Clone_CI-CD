{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\n\nvar getInitialState = function (query, defaultState) {\n  // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n  if (defaultState !== undefined) {\n    return defaultState;\n  }\n\n  if (isBrowser) {\n    return window.matchMedia(query).matches;\n  } // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n  }\n\n  return false;\n};\n\nvar useMedia = function (query, defaultState) {\n  var _a = useState(getInitialState(query, defaultState)),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var mounted = true;\n    var mql = window.matchMedia(query);\n\n    var onChange = function () {\n      if (!mounted) {\n        return;\n      }\n\n      setState(!!mql.matches);\n    };\n\n    mql.addListener(onChange);\n    setState(mql.matches);\n    return function () {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n  return state;\n};\n\nexport default useMedia;","map":{"version":3,"sources":["C:/Users/ayush mishra/Desktop/Spotify_Clone_CI-CD/node_modules/react-use/esm/useMedia.js"],"names":["useEffect","useState","isBrowser","getInitialState","query","defaultState","undefined","window","matchMedia","matches","process","env","NODE_ENV","console","warn","useMedia","_a","state","setState","mounted","mql","onChange","addListener","removeListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiBC,YAAjB,EAA+B;AACjD;AACA,MAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC5B,WAAOD,YAAP;AACH;;AACD,MAAIH,SAAJ,EAAe;AACX,WAAOK,MAAM,CAACC,UAAP,CAAkBJ,KAAlB,EAAyBK,OAAhC;AACH,GAPgD,CAQjD;;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,IAAAA,OAAO,CAACC,IAAR,CAAa,0GAAb;AACH;;AACD,SAAO,KAAP;AACH,CAbD;;AAcA,IAAIC,QAAQ,GAAG,UAAUX,KAAV,EAAiBC,YAAjB,EAA+B;AAC1C,MAAIW,EAAE,GAAGf,QAAQ,CAACE,eAAe,CAACC,KAAD,EAAQC,YAAR,CAAhB,CAAjB;AAAA,MAAyDY,KAAK,GAAGD,EAAE,CAAC,CAAD,CAAnE;AAAA,MAAwEE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAArF;;AACAhB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAImB,OAAO,GAAG,IAAd;AACA,QAAIC,GAAG,GAAGb,MAAM,CAACC,UAAP,CAAkBJ,KAAlB,CAAV;;AACA,QAAIiB,QAAQ,GAAG,YAAY;AACvB,UAAI,CAACF,OAAL,EAAc;AACV;AACH;;AACDD,MAAAA,QAAQ,CAAC,CAAC,CAACE,GAAG,CAACX,OAAP,CAAR;AACH,KALD;;AAMAW,IAAAA,GAAG,CAACE,WAAJ,CAAgBD,QAAhB;AACAH,IAAAA,QAAQ,CAACE,GAAG,CAACX,OAAL,CAAR;AACA,WAAO,YAAY;AACfU,MAAAA,OAAO,GAAG,KAAV;AACAC,MAAAA,GAAG,CAACG,cAAJ,CAAmBF,QAAnB;AACH,KAHD;AAIH,GAfQ,EAeN,CAACjB,KAAD,CAfM,CAAT;AAgBA,SAAOa,KAAP;AACH,CAnBD;;AAoBA,eAAeF,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { isBrowser } from './misc/util';\r\nvar getInitialState = function (query, defaultState) {\r\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\r\n    if (defaultState !== undefined) {\r\n        return defaultState;\r\n    }\r\n    if (isBrowser) {\r\n        return window.matchMedia(query).matches;\r\n    }\r\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\r\n    }\r\n    return false;\r\n};\r\nvar useMedia = function (query, defaultState) {\r\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\r\n    useEffect(function () {\r\n        var mounted = true;\r\n        var mql = window.matchMedia(query);\r\n        var onChange = function () {\r\n            if (!mounted) {\r\n                return;\r\n            }\r\n            setState(!!mql.matches);\r\n        };\r\n        mql.addListener(onChange);\r\n        setState(mql.matches);\r\n        return function () {\r\n            mounted = false;\r\n            mql.removeListener(onChange);\r\n        };\r\n    }, [query]);\r\n    return state;\r\n};\r\nexport default useMedia;\r\n"]},"metadata":{},"sourceType":"module"}